name: Build and Deploy API

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GHCR_REGISTRY: ghcr.io
  OWNER_LC: ${{ github.repository_owner }}
  SHORT_SHA: ${{ github.sha }}
  IMAGE_NAME: ${{ github.repository }}-api

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Inject image tag into docker-compose.api.yml
        run: |
          sed -i "s|\${GHCR_REGISTRY}|${{ env.GHCR_REGISTRY }}|g" docker-compose.api.yml
          sed -i "s|\${OWNER_LC}|${{ env.OWNER_LC }}|g" docker-compose.api.yml
          sed -i "s|\${SHA}|${{ env.SHORT_SHA }}|g" docker-compose.api.yml
          echo "üîß Variables inject√©es dans docker-compose.api.yml"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create project directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ~/fast-foodie
            mkdir -p ~/fast-foodie/backups
            echo "üìÅ R√©pertoire fast-foodie cr√©√©/confirm√©"

      - name: Copy deployment files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: 'docker-compose.api.yml,scripts/'
          target: '~/fast-foodie/'
          strip_components: 0

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: CR_PAT,GITHUB_USERNAME
          script: |
            cd ~/fast-foodie
            export CR_PAT="${{ secrets.CR_PAT }}"
            export GITHUB_USERNAME="${{ github.actor }}"
            chmod +x scripts/deploy.sh
            ./scripts/deploy.sh
